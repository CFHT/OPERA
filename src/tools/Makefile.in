# Makefile.in generated by automake 1.11.6 from Makefile.am.
# @configure_input@

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011 Free Software
# Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@

VPATH = @srcdir@
am__make_dryrun = \
  { \
    am__dry=no; \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        echo 'am--echo: ; @echo "AM"  OK' | $(MAKE) -f - 2>/dev/null \
          | grep '^AM OK$$' >/dev/null || am__dry=yes;; \
      *) \
        for am__flg in $$MAKEFLAGS; do \
          case $$am__flg in \
            *=*|--*) ;; \
            *n*) am__dry=yes; break;; \
          esac; \
        done;; \
    esac; \
    test $$am__dry = yes; \
  }
pkgdatadir = $(datadir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkglibexecdir = $(libexecdir)/@PACKAGE@
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = @build@
host_triplet = @host@
bin_PROGRAMS = operaConfigurationAccess$(EXEEXT) \
	operaParameterAccess$(EXEEXT) opera$(EXEEXT) \
	operaImage$(EXEEXT) operaFITS2txt$(EXEEXT) \
	operaCreateBadpixMask$(EXEEXT) operagetheader$(EXEEXT) \
	operasaturated$(EXEEXT) operaConvert2ampTo1amp$(EXEEXT) \
	operaExtractRawSum$(EXEEXT) operaimarith$(EXEEXT) \
	operaQueryImageInfo$(EXEEXT) operasetheader$(EXEEXT) \
	operacompress$(EXEEXT) operabiasinjector$(EXEEXT) \
	operaPlotInstrumentProfile$(EXEEXT) operaStatistics$(EXEEXT) \
	espqlh$(EXEEXT) catz$(EXEEXT) operaFITSDisplayImage$(EXEEXT) \
	operaimagestats$(EXEEXT) operads9thumbs$(EXEEXT) \
	operaRotate$(EXEEXT) operaEspadonsETC$(EXEEXT) \
	operaExtractImage$(EXEEXT) operaPlotOut$(EXEEXT) \
	operaRotateMirrorCrop$(EXEEXT) operaMedianCombine$(EXEEXT) \
	operaMJD$(EXEEXT) $(am__EXEEXT_1)
@LIBPNG_TRUE@am__append_1 = $(FT_ARG) 
@LIBPNG_TRUE@am__append_2 = $(FT_ARG) 
@LIBPNG_TRUE@am__append_3 = operaFITStoPNG operaPlotGeom operaPlotWave operaPlot
@LIBPNG_TRUE@am__append_4 = -loperaPNG -lpng -lz -lfreetype
@LIBPNG_TRUE@am__append_5 = -loperaPNG -lpng -lz -lfreetype

#
# wcs support
#				
@LIBWCS_TRUE@am__append_6 = -lwcs
@LIBWCS_TRUE@am__append_7 = -lwcs
subdir = src/tools
DIST_COMMON = $(srcdir)/Makefile.am $(srcdir)/Makefile.in
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/m4/libtool.m4 \
	$(top_srcdir)/m4/ltoptions.m4 $(top_srcdir)/m4/ltsugar.m4 \
	$(top_srcdir)/m4/ltversion.m4 $(top_srcdir)/m4/lt~obsolete.m4 \
	$(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
@LIBPNG_TRUE@am__EXEEXT_1 = operaFITStoPNG$(EXEEXT) \
@LIBPNG_TRUE@	operaPlotGeom$(EXEEXT) operaPlotWave$(EXEEXT) \
@LIBPNG_TRUE@	operaPlot$(EXEEXT)
am__installdirs = "$(DESTDIR)$(bindir)"
PROGRAMS = $(bin_PROGRAMS)
am_catz_OBJECTS = catz.$(OBJEXT)
catz_OBJECTS = $(am_catz_OBJECTS)
catz_LDADD = $(LDADD)
am_espqlh_OBJECTS = espqlh.$(OBJEXT)
espqlh_OBJECTS = $(am_espqlh_OBJECTS)
espqlh_LDADD = $(LDADD)
am_opera_OBJECTS = opera.$(OBJEXT)
opera_OBJECTS = $(am_opera_OBJECTS)
opera_LDADD = $(LDADD)
am_operaConfigurationAccess_OBJECTS =  \
	operaConfigurationAccess.$(OBJEXT)
operaConfigurationAccess_OBJECTS =  \
	$(am_operaConfigurationAccess_OBJECTS)
operaConfigurationAccess_LDADD = $(LDADD)
am_operaConvert2ampTo1amp_OBJECTS = operaConvert2ampTo1amp.$(OBJEXT)
operaConvert2ampTo1amp_OBJECTS = $(am_operaConvert2ampTo1amp_OBJECTS)
operaConvert2ampTo1amp_LDADD = $(LDADD)
am_operaCreateBadpixMask_OBJECTS = operaCreateBadpixMask.$(OBJEXT)
operaCreateBadpixMask_OBJECTS = $(am_operaCreateBadpixMask_OBJECTS)
operaCreateBadpixMask_LDADD = $(LDADD)
am_operaEspadonsETC_OBJECTS = operaEspadonsETC.$(OBJEXT)
operaEspadonsETC_OBJECTS = $(am_operaEspadonsETC_OBJECTS)
operaEspadonsETC_LDADD = $(LDADD)
am_operaExtractImage_OBJECTS = operaExtractImage.$(OBJEXT)
operaExtractImage_OBJECTS = $(am_operaExtractImage_OBJECTS)
operaExtractImage_LDADD = $(LDADD)
am_operaExtractRawSum_OBJECTS = operaExtractRawSum.$(OBJEXT)
operaExtractRawSum_OBJECTS = $(am_operaExtractRawSum_OBJECTS)
operaExtractRawSum_LDADD = $(LDADD)
am_operaFITS2txt_OBJECTS = operaFITS2txt.$(OBJEXT)
operaFITS2txt_OBJECTS = $(am_operaFITS2txt_OBJECTS)
operaFITS2txt_LDADD = $(LDADD)
am_operaFITSDisplayImage_OBJECTS = operaFITSDisplayImage.$(OBJEXT)
operaFITSDisplayImage_OBJECTS = $(am_operaFITSDisplayImage_OBJECTS)
operaFITSDisplayImage_LDADD = $(LDADD)
am__operaFITStoPNG_SOURCES_DIST = operaFITStoPNG.c operaFITStoPNG.h
@LIBPNG_TRUE@am_operaFITStoPNG_OBJECTS = operaFITStoPNG.$(OBJEXT)
operaFITStoPNG_OBJECTS = $(am_operaFITStoPNG_OBJECTS)
operaFITStoPNG_LDADD = $(LDADD)
am_operaImage_OBJECTS = operaImage.$(OBJEXT)
operaImage_OBJECTS = $(am_operaImage_OBJECTS)
operaImage_LDADD = $(LDADD)
am_operaMJD_OBJECTS = operaMJD.$(OBJEXT)
operaMJD_OBJECTS = $(am_operaMJD_OBJECTS)
operaMJD_LDADD = $(LDADD)
am_operaMedianCombine_OBJECTS = operaMedianCombine.$(OBJEXT)
operaMedianCombine_OBJECTS = $(am_operaMedianCombine_OBJECTS)
operaMedianCombine_LDADD = $(LDADD)
am_operaParameterAccess_OBJECTS = operaParameterAccess.$(OBJEXT)
operaParameterAccess_OBJECTS = $(am_operaParameterAccess_OBJECTS)
operaParameterAccess_LDADD = $(LDADD)
am__operaPlot_SOURCES_DIST = operaPlot.cpp operaPlot.h
@LIBPNG_TRUE@am_operaPlot_OBJECTS = operaPlot.$(OBJEXT)
operaPlot_OBJECTS = $(am_operaPlot_OBJECTS)
operaPlot_LDADD = $(LDADD)
am__operaPlotGeom_SOURCES_DIST = operaPlotGeom.cpp operaPlotGeom.h
@LIBPNG_TRUE@am_operaPlotGeom_OBJECTS = operaPlotGeom.$(OBJEXT)
operaPlotGeom_OBJECTS = $(am_operaPlotGeom_OBJECTS)
operaPlotGeom_LDADD = $(LDADD)
am_operaPlotInstrumentProfile_OBJECTS =  \
	operaPlotInstrumentProfile.$(OBJEXT)
operaPlotInstrumentProfile_OBJECTS =  \
	$(am_operaPlotInstrumentProfile_OBJECTS)
operaPlotInstrumentProfile_LDADD = $(LDADD)
am_operaPlotOut_OBJECTS = operaPlotOut.$(OBJEXT)
operaPlotOut_OBJECTS = $(am_operaPlotOut_OBJECTS)
operaPlotOut_LDADD = $(LDADD)
am__operaPlotWave_SOURCES_DIST = operaPlotWave.cpp operaPlotWave.h
@LIBPNG_TRUE@am_operaPlotWave_OBJECTS = operaPlotWave.$(OBJEXT)
operaPlotWave_OBJECTS = $(am_operaPlotWave_OBJECTS)
operaPlotWave_LDADD = $(LDADD)
am_operaQueryImageInfo_OBJECTS = operaQueryImageInfo.$(OBJEXT)
operaQueryImageInfo_OBJECTS = $(am_operaQueryImageInfo_OBJECTS)
operaQueryImageInfo_LDADD = $(LDADD)
am_operaRotate_OBJECTS = operaRotate.$(OBJEXT)
operaRotate_OBJECTS = $(am_operaRotate_OBJECTS)
operaRotate_LDADD = $(LDADD)
am_operaRotateMirrorCrop_OBJECTS = operaRotateMirrorCrop.$(OBJEXT)
operaRotateMirrorCrop_OBJECTS = $(am_operaRotateMirrorCrop_OBJECTS)
operaRotateMirrorCrop_LDADD = $(LDADD)
am_operaStatistics_OBJECTS = operaStatistics.$(OBJEXT)
operaStatistics_OBJECTS = $(am_operaStatistics_OBJECTS)
operaStatistics_LDADD = $(LDADD)
am_operabiasinjector_OBJECTS = operabiasinjector.$(OBJEXT)
operabiasinjector_OBJECTS = $(am_operabiasinjector_OBJECTS)
operabiasinjector_LDADD = $(LDADD)
am_operacompress_OBJECTS = operacompress.$(OBJEXT)
operacompress_OBJECTS = $(am_operacompress_OBJECTS)
operacompress_LDADD = $(LDADD)
am_operads9thumbs_OBJECTS = operads9thumbs.$(OBJEXT)
operads9thumbs_OBJECTS = $(am_operads9thumbs_OBJECTS)
operads9thumbs_LDADD = $(LDADD)
am_operagetheader_OBJECTS = operagetheader.$(OBJEXT)
operagetheader_OBJECTS = $(am_operagetheader_OBJECTS)
operagetheader_LDADD = $(LDADD)
am_operaimagestats_OBJECTS = operaimagestats.$(OBJEXT)
operaimagestats_OBJECTS = $(am_operaimagestats_OBJECTS)
operaimagestats_LDADD = $(LDADD)
am_operaimarith_OBJECTS = operaimarith.$(OBJEXT)
operaimarith_OBJECTS = $(am_operaimarith_OBJECTS)
operaimarith_LDADD = $(LDADD)
am_operasaturated_OBJECTS = operasaturated.$(OBJEXT)
operasaturated_OBJECTS = $(am_operasaturated_OBJECTS)
operasaturated_LDADD = $(LDADD)
am_operasetheader_OBJECTS = operasetheader.$(OBJEXT)
operasetheader_OBJECTS = $(am_operasetheader_OBJECTS)
operasetheader_LDADD = $(LDADD)
DEFAULT_INCLUDES = -I.@am__isrc@
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
LTCXXCOMPILE = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
CXXLD = $(CXX)
CXXLINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
SOURCES = $(catz_SOURCES) $(espqlh_SOURCES) $(opera_SOURCES) \
	$(operaConfigurationAccess_SOURCES) \
	$(operaConvert2ampTo1amp_SOURCES) \
	$(operaCreateBadpixMask_SOURCES) $(operaEspadonsETC_SOURCES) \
	$(operaExtractImage_SOURCES) $(operaExtractRawSum_SOURCES) \
	$(operaFITS2txt_SOURCES) $(operaFITSDisplayImage_SOURCES) \
	$(operaFITStoPNG_SOURCES) $(operaImage_SOURCES) \
	$(operaMJD_SOURCES) $(operaMedianCombine_SOURCES) \
	$(operaParameterAccess_SOURCES) $(operaPlot_SOURCES) \
	$(operaPlotGeom_SOURCES) $(operaPlotInstrumentProfile_SOURCES) \
	$(operaPlotOut_SOURCES) $(operaPlotWave_SOURCES) \
	$(operaQueryImageInfo_SOURCES) $(operaRotate_SOURCES) \
	$(operaRotateMirrorCrop_SOURCES) $(operaStatistics_SOURCES) \
	$(operabiasinjector_SOURCES) $(operacompress_SOURCES) \
	$(operads9thumbs_SOURCES) $(operagetheader_SOURCES) \
	$(operaimagestats_SOURCES) $(operaimarith_SOURCES) \
	$(operasaturated_SOURCES) $(operasetheader_SOURCES)
DIST_SOURCES = $(catz_SOURCES) $(espqlh_SOURCES) $(opera_SOURCES) \
	$(operaConfigurationAccess_SOURCES) \
	$(operaConvert2ampTo1amp_SOURCES) \
	$(operaCreateBadpixMask_SOURCES) $(operaEspadonsETC_SOURCES) \
	$(operaExtractImage_SOURCES) $(operaExtractRawSum_SOURCES) \
	$(operaFITS2txt_SOURCES) $(operaFITSDisplayImage_SOURCES) \
	$(am__operaFITStoPNG_SOURCES_DIST) $(operaImage_SOURCES) \
	$(operaMJD_SOURCES) $(operaMedianCombine_SOURCES) \
	$(operaParameterAccess_SOURCES) $(am__operaPlot_SOURCES_DIST) \
	$(am__operaPlotGeom_SOURCES_DIST) \
	$(operaPlotInstrumentProfile_SOURCES) $(operaPlotOut_SOURCES) \
	$(am__operaPlotWave_SOURCES_DIST) \
	$(operaQueryImageInfo_SOURCES) $(operaRotate_SOURCES) \
	$(operaRotateMirrorCrop_SOURCES) $(operaStatistics_SOURCES) \
	$(operabiasinjector_SOURCES) $(operacompress_SOURCES) \
	$(operads9thumbs_SOURCES) $(operagetheader_SOURCES) \
	$(operaimagestats_SOURCES) $(operaimarith_SOURCES) \
	$(operasaturated_SOURCES) $(operasetheader_SOURCES)
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = @ACLOCAL@
AMTAR = @AMTAR@
AR = @AR@
AUTOCONF = @AUTOCONF@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
CC = @CC@
CCDEPMODE = @CCDEPMODE@
CFITSIOINC = @CFITSIOINC@
CFITSIOLIB = @CFITSIOLIB@
CFLAGS = @CFLAGS@
CPP = @CPP@
CPPFLAGS = @CPPFLAGS@
CXX = @CXX@
CXXCPP = @CXXCPP@
CXXDEPMODE = @CXXDEPMODE@
CXXFLAGS = @CXXFLAGS@
CYGPATH_W = @CYGPATH_W@
DEFS = @DEFS@
DEPDIR = @DEPDIR@
DLLTOOL = @DLLTOOL@
DSYMUTIL = @DSYMUTIL@
DUMPBIN = @DUMPBIN@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EGREP = @EGREP@
EXEEXT = @EXEEXT@
FGREP = @FGREP@
GREP = @GREP@
INSTALL = @INSTALL@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
LD = @LD@
LDFLAGS = @LDFLAGS@
LIBOBJS = @LIBOBJS@
# This is for Linux...
LIBS = -loperaInstrumentEnvironmentSetup -loperaObservingConditions \
	-loperaObjectInTheSky -loperaSpectrograph -loperaTelescope \
	-loperaDateTime -loperaIOFormats -loperaSpectralOrderVector \
	-loperaSpectralOrder -loperaSpectralElements \
	-loperaSpectralLines -loperaSpectralFeature \
	-loperaExtractionAperture -loperaSpectralTools \
	-loperaFluxVector -loperaVector -lGaussian \
	-loperaInstrumentProfile -loperaGeometry -loperaWavelength \
	-loperaEspadonsSubImage -loperaFITSProduct \
	-loperaMEFFITSProduct -loperaFITSImage -loperaEspadonsImage \
	-loperaMultiExtensionFITSCube -loperaMultiExtensionFITSImage \
	-loperaFITSCube -loperaPolarimetry -loperaException \
	-lGainBiasNoise -loperaFFT -loperaMuellerMatrix \
	-loperaStokesVector -loperaFluxVector -loperaImageVector \
	-loperaFITSSubImage -loperaImageVector -loperaGeometricShapes \
	-loperaMatrix -lPolynomial -lLaurentPolynomial -loperaMath \
	-loperaCCD -loperaFit -loperaImage -loperaLMFit \
	-loperaConfigurationAccess -loperaParameterAccess -lPixelSet \
	-loperaSpectralEnergyDistribution -loperaStats -loperaLib \
	-loperaArgumentHandler -lArgumentHandler -lfftw3 -lgzstream \
	-lcfitsio -lz -lpthread -lm $(am__append_5) $(am__append_7)
LIBTOOL = @LIBTOOL@
LIPO = @LIPO@
LN_S = @LN_S@
LTLIBOBJS = @LTLIBOBJS@
MAKEINFO = @MAKEINFO@
MANIFEST_TOOL = @MANIFEST_TOOL@
MKDIR_P = @MKDIR_P@
NM = @NM@
NMEDIT = @NMEDIT@
OBJDUMP = @OBJDUMP@
OBJEXT = @OBJEXT@
OTOOL = @OTOOL@
OTOOL64 = @OTOOL64@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_URL = @PACKAGE_URL@
PACKAGE_VERSION = @PACKAGE_VERSION@
PATH_SEPARATOR = @PATH_SEPARATOR@
RANLIB = @RANLIB@
SED = @SED@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
STRIP = @STRIP@
VERSION = @VERSION@
abs_builddir = @abs_builddir@
abs_srcdir = @abs_srcdir@
abs_top_builddir = @abs_top_builddir@
abs_top_srcdir = @abs_top_srcdir@
ac_ct_AR = @ac_ct_AR@
ac_ct_CC = @ac_ct_CC@
ac_ct_CXX = @ac_ct_CXX@
ac_ct_DUMPBIN = @ac_ct_DUMPBIN@
am__include = @am__include@
am__leading_dot = @am__leading_dot@
am__quote = @am__quote@
am__tar = @am__tar@
am__untar = @am__untar@
bindir = @bindir@
build = @build@
build_alias = @build_alias@
build_cpu = @build_cpu@
build_os = @build_os@
build_vendor = @build_vendor@
builddir = @builddir@
datadir = @datadir@
datarootdir = @datarootdir@
docdir = @docdir@
dvidir = @dvidir@
exec_prefix = @exec_prefix@
host = @host@
host_alias = @host_alias@
host_cpu = @host_cpu@
host_os = @host_os@
host_vendor = @host_vendor@
htmldir = @htmldir@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
libdir = @libdir@
libexecdir = @libexecdir@
localedir = @localedir@
localstatedir = @localstatedir@
mandir = @mandir@
mkdir_p = @mkdir_p@
oldincludedir = @oldincludedir@
pdfdir = @pdfdir@
prefix = @prefix@
program_transform_name = @program_transform_name@
psdir = @psdir@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
srcdir = @srcdir@
sysconfdir = @sysconfdir@
target_alias = @target_alias@
top_build_prefix = @top_build_prefix@
top_builddir = @top_builddir@
top_srcdir = @top_srcdir@

# what flags you want to pass to the C compiler & linker
AM_CFLAGS = --pedantic -Wall -std=c99 -g -O1 \
	-L$(PREFIX)/src/libraries/ -L../../lib -L/usr/lib/ \
	-L/usr/lib/x86_64-linux-gnu/ -L/usr/local/lib/ \
	-I../../include/ -I/usr/local/include/ $(am__append_2)
AM_CXXFLAGS = --pedantic -Wall -g -O1 -L$(PREFIX)/src/libraries/ \
	-L../../lib -I../../include/ -I/usr/include/ \
	-I/usr/local/include/ -L/usr/lib/ -L/usr/lib/x86_64-linux-gnu/ \
	-L/usr/local/lib/ $(am__append_1)
AM_LDFLAGS = -loperaInstrumentEnvironmentSetup \
	-loperaObservingConditions -loperaObjectInTheSky \
	-loperaSpectrograph -loperaTelescope -loperaDateTime \
	-loperaIOFormats -loperaSpectralOrderVector \
	-loperaSpectralOrder -loperaSpectralElements -loperaFluxVector \
	-loperaSpectralLines -loperaSpectralFeature \
	-loperaExtractionAperture -loperaSpectralTools -lGaussian \
	-loperaInstrumentProfile -loperaGeometry -loperaWavelength \
	-lPolynomial -lLaurentPolynomial -loperaMath -loperaCCD \
	-loperaFit -loperaImage -loperaLMFit \
	-loperaConfigurationAccess -loperaParameterAccess \
	-loperaFITSSubImage -loperaEspadonsSubImage -loperaPolarimetry \
	-loperaFITSProduct -loperaMEFFITSProduct -loperaFITSImage \
	-loperaEspadonsImage -loperaMultiExtensionFITSCube \
	-loperaMultiExtensionFITSImage -loperaFITSCube \
	-loperaException -lGainBiasNoise -loperaMuellerMatrix \
	-loperaStokesVector -loperaVector -loperaFFT \
	-loperaImageVector -loperaGeometricShapes -loperaMatrix \
	-lPixelSet -loperaSpectralEnergyDistribution -loperaStats \
	-loperaLib -loperaArgumentHandler -lArgumentHandler -lfftw3 \
	-lgzstream -lcfitsio -lz -lpthread -lm $(am__append_4) \
	$(am__append_6)
#
# if we want png plotting support, bring in the png libs and freetype
#				
@LIBPNG_TRUE@FT_ARG := `$(FREE_TYPE_CONFIG_PATH)freetype-config --cflags` `$(FREE_TYPE_CONFIG_PATH)freetype-config --libs`
@LIBPNG_TRUE@operaFITStoPNG_SOURCES = operaFITStoPNG.c operaFITStoPNG.h
@LIBPNG_TRUE@operaPlotGeom_SOURCES = operaPlotGeom.cpp operaPlotGeom.h
@LIBPNG_TRUE@operaPlotWave_SOURCES = operaPlotWave.cpp operaPlotWave.h
@LIBPNG_TRUE@operaPlot_SOURCES = operaPlot.cpp operaPlot.h
operaMJD_SOURCES = operaMJD.cpp
operaRotateMirrorCrop_SOURCES = operaRotateMirrorCrop.cpp
operaMedianCombine_SOURCES = operaMedianCombine.cpp
operaPlotOut_SOURCES = operaPlotOut.cpp
operaExtractImage_SOURCES = operaExtractImage.cpp
operaEspadonsETC_SOURCES = operaEspadonsETC.cpp operaEspadonsETC.h
operaRotate_SOURCES = operaRotate.cpp
operads9thumbs_SOURCES = operads9thumbs.cpp
operaimagestats_SOURCES = operaimagestats.cpp
operaFITSDisplayImage_SOURCES = operaFITSDisplayImage.cpp
espqlh_SOURCES = espqlh.cpp
catz_SOURCES = catz.cpp
operaStatistics_SOURCES = operaStatistics.cpp
operaPlotInstrumentProfile_SOURCES = operaPlotInstrumentProfile.cpp
operabiasinjector_SOURCES = operabiasinjector.cpp
operaExtractRawSum_SOURCES = operaExtractRawSum.cpp operaExtractRawSum.h
operaConfigurationAccess_SOURCES = operaConfigurationAccess.cpp operaConfigurationAccess.h
operaParameterAccess_SOURCES = operaParameterAccess.cpp operaParameterAccess.h
opera_SOURCES = opera.cpp opera.h
operaImage_SOURCES = operaImage.cpp operaImage.h
operagetheader_SOURCES = operagetheader.cpp operagetheader.h
operasetheader_SOURCES = operasetheader.cpp operasetheader.h
operacompress_SOURCES = operacompress.cpp operacompress.h
operaimarith_SOURCES = operaimarith.cpp operaimarith.h
operasaturated_SOURCES = operasaturated.cpp operasaturated.h
operaCreateBadpixMask_SOURCES = operaCreateBadpixMask.cpp operaCreateBadpixMask.h
operaFITS2txt_SOURCES = operaFITS2txt.cpp operaFITS2txt.h
operaConvert2ampTo1amp_SOURCES = operaConvert2ampTo1amp.cpp operaConvert2ampTo1amp.h
operaQueryImageInfo_SOURCES = operaQueryImageInfo.cpp operaQueryImageInfo.h
all: all-am

.SUFFIXES:
.SUFFIXES: .c .cpp .lo .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign src/tools/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --foreign src/tools/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(bindir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(bindir)" || exit 1; \
	fi; \
	for p in $$list; do echo "$$p $$p"; done | \
	sed 's/$(EXEEXT)$$//' | \
	while read p p1; do if test -f $$p || test -f $$p1; \
	  then echo "$$p"; echo "$$p"; else :; fi; \
	done | \
	sed -e 'p;s,.*/,,;n;h' -e 's|.*|.|' \
	    -e 'p;x;s,.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/' | \
	sed 'N;N;N;s,\n, ,g' | \
	$(AWK) 'BEGIN { files["."] = ""; dirs["."] = 1 } \
	  { d=$$3; if (dirs[d] != 1) { print "d", d; dirs[d] = 1 } \
	    if ($$2 == $$4) files[d] = files[d] " " $$1; \
	    else { print "f", $$3 "/" $$4, $$1; } } \
	  END { for (d in files) print "f", d, files[d] }' | \
	while read type dir files; do \
	    if test "$$dir" = .; then dir=; else dir=/$$dir; fi; \
	    test -z "$$files" || { \
	    echo " $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL_PROGRAM) $$files '$(DESTDIR)$(bindir)$$dir'"; \
	    $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL_PROGRAM) $$files "$(DESTDIR)$(bindir)$$dir" || exit $$?; \
	    } \
	; done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	files=`for p in $$list; do echo "$$p"; done | \
	  sed -e 'h;s,^.*/,,;s/$(EXEEXT)$$//;$(transform)' \
	      -e 's/$$/$(EXEEXT)/' `; \
	test -n "$$list" || exit 0; \
	echo " ( cd '$(DESTDIR)$(bindir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(bindir)" && rm -f $$files

clean-binPROGRAMS:
	@list='$(bin_PROGRAMS)'; test -n "$$list" || exit 0; \
	echo " rm -f" $$list; \
	rm -f $$list || exit $$?; \
	test -n "$(EXEEXT)" || exit 0; \
	list=`for p in $$list; do echo "$$p"; done | sed 's/$(EXEEXT)$$//'`; \
	echo " rm -f" $$list; \
	rm -f $$list
catz$(EXEEXT): $(catz_OBJECTS) $(catz_DEPENDENCIES) $(EXTRA_catz_DEPENDENCIES) 
	@rm -f catz$(EXEEXT)
	$(CXXLINK) $(catz_OBJECTS) $(catz_LDADD) $(LIBS)
espqlh$(EXEEXT): $(espqlh_OBJECTS) $(espqlh_DEPENDENCIES) $(EXTRA_espqlh_DEPENDENCIES) 
	@rm -f espqlh$(EXEEXT)
	$(CXXLINK) $(espqlh_OBJECTS) $(espqlh_LDADD) $(LIBS)
opera$(EXEEXT): $(opera_OBJECTS) $(opera_DEPENDENCIES) $(EXTRA_opera_DEPENDENCIES) 
	@rm -f opera$(EXEEXT)
	$(CXXLINK) $(opera_OBJECTS) $(opera_LDADD) $(LIBS)
operaConfigurationAccess$(EXEEXT): $(operaConfigurationAccess_OBJECTS) $(operaConfigurationAccess_DEPENDENCIES) $(EXTRA_operaConfigurationAccess_DEPENDENCIES) 
	@rm -f operaConfigurationAccess$(EXEEXT)
	$(CXXLINK) $(operaConfigurationAccess_OBJECTS) $(operaConfigurationAccess_LDADD) $(LIBS)
operaConvert2ampTo1amp$(EXEEXT): $(operaConvert2ampTo1amp_OBJECTS) $(operaConvert2ampTo1amp_DEPENDENCIES) $(EXTRA_operaConvert2ampTo1amp_DEPENDENCIES) 
	@rm -f operaConvert2ampTo1amp$(EXEEXT)
	$(CXXLINK) $(operaConvert2ampTo1amp_OBJECTS) $(operaConvert2ampTo1amp_LDADD) $(LIBS)
operaCreateBadpixMask$(EXEEXT): $(operaCreateBadpixMask_OBJECTS) $(operaCreateBadpixMask_DEPENDENCIES) $(EXTRA_operaCreateBadpixMask_DEPENDENCIES) 
	@rm -f operaCreateBadpixMask$(EXEEXT)
	$(CXXLINK) $(operaCreateBadpixMask_OBJECTS) $(operaCreateBadpixMask_LDADD) $(LIBS)
operaEspadonsETC$(EXEEXT): $(operaEspadonsETC_OBJECTS) $(operaEspadonsETC_DEPENDENCIES) $(EXTRA_operaEspadonsETC_DEPENDENCIES) 
	@rm -f operaEspadonsETC$(EXEEXT)
	$(CXXLINK) $(operaEspadonsETC_OBJECTS) $(operaEspadonsETC_LDADD) $(LIBS)
operaExtractImage$(EXEEXT): $(operaExtractImage_OBJECTS) $(operaExtractImage_DEPENDENCIES) $(EXTRA_operaExtractImage_DEPENDENCIES) 
	@rm -f operaExtractImage$(EXEEXT)
	$(CXXLINK) $(operaExtractImage_OBJECTS) $(operaExtractImage_LDADD) $(LIBS)
operaExtractRawSum$(EXEEXT): $(operaExtractRawSum_OBJECTS) $(operaExtractRawSum_DEPENDENCIES) $(EXTRA_operaExtractRawSum_DEPENDENCIES) 
	@rm -f operaExtractRawSum$(EXEEXT)
	$(CXXLINK) $(operaExtractRawSum_OBJECTS) $(operaExtractRawSum_LDADD) $(LIBS)
operaFITS2txt$(EXEEXT): $(operaFITS2txt_OBJECTS) $(operaFITS2txt_DEPENDENCIES) $(EXTRA_operaFITS2txt_DEPENDENCIES) 
	@rm -f operaFITS2txt$(EXEEXT)
	$(CXXLINK) $(operaFITS2txt_OBJECTS) $(operaFITS2txt_LDADD) $(LIBS)
operaFITSDisplayImage$(EXEEXT): $(operaFITSDisplayImage_OBJECTS) $(operaFITSDisplayImage_DEPENDENCIES) $(EXTRA_operaFITSDisplayImage_DEPENDENCIES) 
	@rm -f operaFITSDisplayImage$(EXEEXT)
	$(CXXLINK) $(operaFITSDisplayImage_OBJECTS) $(operaFITSDisplayImage_LDADD) $(LIBS)
operaFITStoPNG$(EXEEXT): $(operaFITStoPNG_OBJECTS) $(operaFITStoPNG_DEPENDENCIES) $(EXTRA_operaFITStoPNG_DEPENDENCIES) 
	@rm -f operaFITStoPNG$(EXEEXT)
	$(LINK) $(operaFITStoPNG_OBJECTS) $(operaFITStoPNG_LDADD) $(LIBS)
operaImage$(EXEEXT): $(operaImage_OBJECTS) $(operaImage_DEPENDENCIES) $(EXTRA_operaImage_DEPENDENCIES) 
	@rm -f operaImage$(EXEEXT)
	$(CXXLINK) $(operaImage_OBJECTS) $(operaImage_LDADD) $(LIBS)
operaMJD$(EXEEXT): $(operaMJD_OBJECTS) $(operaMJD_DEPENDENCIES) $(EXTRA_operaMJD_DEPENDENCIES) 
	@rm -f operaMJD$(EXEEXT)
	$(CXXLINK) $(operaMJD_OBJECTS) $(operaMJD_LDADD) $(LIBS)
operaMedianCombine$(EXEEXT): $(operaMedianCombine_OBJECTS) $(operaMedianCombine_DEPENDENCIES) $(EXTRA_operaMedianCombine_DEPENDENCIES) 
	@rm -f operaMedianCombine$(EXEEXT)
	$(CXXLINK) $(operaMedianCombine_OBJECTS) $(operaMedianCombine_LDADD) $(LIBS)
operaParameterAccess$(EXEEXT): $(operaParameterAccess_OBJECTS) $(operaParameterAccess_DEPENDENCIES) $(EXTRA_operaParameterAccess_DEPENDENCIES) 
	@rm -f operaParameterAccess$(EXEEXT)
	$(CXXLINK) $(operaParameterAccess_OBJECTS) $(operaParameterAccess_LDADD) $(LIBS)
operaPlot$(EXEEXT): $(operaPlot_OBJECTS) $(operaPlot_DEPENDENCIES) $(EXTRA_operaPlot_DEPENDENCIES) 
	@rm -f operaPlot$(EXEEXT)
	$(CXXLINK) $(operaPlot_OBJECTS) $(operaPlot_LDADD) $(LIBS)
operaPlotGeom$(EXEEXT): $(operaPlotGeom_OBJECTS) $(operaPlotGeom_DEPENDENCIES) $(EXTRA_operaPlotGeom_DEPENDENCIES) 
	@rm -f operaPlotGeom$(EXEEXT)
	$(CXXLINK) $(operaPlotGeom_OBJECTS) $(operaPlotGeom_LDADD) $(LIBS)
operaPlotInstrumentProfile$(EXEEXT): $(operaPlotInstrumentProfile_OBJECTS) $(operaPlotInstrumentProfile_DEPENDENCIES) $(EXTRA_operaPlotInstrumentProfile_DEPENDENCIES) 
	@rm -f operaPlotInstrumentProfile$(EXEEXT)
	$(CXXLINK) $(operaPlotInstrumentProfile_OBJECTS) $(operaPlotInstrumentProfile_LDADD) $(LIBS)
operaPlotOut$(EXEEXT): $(operaPlotOut_OBJECTS) $(operaPlotOut_DEPENDENCIES) $(EXTRA_operaPlotOut_DEPENDENCIES) 
	@rm -f operaPlotOut$(EXEEXT)
	$(CXXLINK) $(operaPlotOut_OBJECTS) $(operaPlotOut_LDADD) $(LIBS)
operaPlotWave$(EXEEXT): $(operaPlotWave_OBJECTS) $(operaPlotWave_DEPENDENCIES) $(EXTRA_operaPlotWave_DEPENDENCIES) 
	@rm -f operaPlotWave$(EXEEXT)
	$(CXXLINK) $(operaPlotWave_OBJECTS) $(operaPlotWave_LDADD) $(LIBS)
operaQueryImageInfo$(EXEEXT): $(operaQueryImageInfo_OBJECTS) $(operaQueryImageInfo_DEPENDENCIES) $(EXTRA_operaQueryImageInfo_DEPENDENCIES) 
	@rm -f operaQueryImageInfo$(EXEEXT)
	$(CXXLINK) $(operaQueryImageInfo_OBJECTS) $(operaQueryImageInfo_LDADD) $(LIBS)
operaRotate$(EXEEXT): $(operaRotate_OBJECTS) $(operaRotate_DEPENDENCIES) $(EXTRA_operaRotate_DEPENDENCIES) 
	@rm -f operaRotate$(EXEEXT)
	$(CXXLINK) $(operaRotate_OBJECTS) $(operaRotate_LDADD) $(LIBS)
operaRotateMirrorCrop$(EXEEXT): $(operaRotateMirrorCrop_OBJECTS) $(operaRotateMirrorCrop_DEPENDENCIES) $(EXTRA_operaRotateMirrorCrop_DEPENDENCIES) 
	@rm -f operaRotateMirrorCrop$(EXEEXT)
	$(CXXLINK) $(operaRotateMirrorCrop_OBJECTS) $(operaRotateMirrorCrop_LDADD) $(LIBS)
operaStatistics$(EXEEXT): $(operaStatistics_OBJECTS) $(operaStatistics_DEPENDENCIES) $(EXTRA_operaStatistics_DEPENDENCIES) 
	@rm -f operaStatistics$(EXEEXT)
	$(CXXLINK) $(operaStatistics_OBJECTS) $(operaStatistics_LDADD) $(LIBS)
operabiasinjector$(EXEEXT): $(operabiasinjector_OBJECTS) $(operabiasinjector_DEPENDENCIES) $(EXTRA_operabiasinjector_DEPENDENCIES) 
	@rm -f operabiasinjector$(EXEEXT)
	$(CXXLINK) $(operabiasinjector_OBJECTS) $(operabiasinjector_LDADD) $(LIBS)
operacompress$(EXEEXT): $(operacompress_OBJECTS) $(operacompress_DEPENDENCIES) $(EXTRA_operacompress_DEPENDENCIES) 
	@rm -f operacompress$(EXEEXT)
	$(CXXLINK) $(operacompress_OBJECTS) $(operacompress_LDADD) $(LIBS)
operads9thumbs$(EXEEXT): $(operads9thumbs_OBJECTS) $(operads9thumbs_DEPENDENCIES) $(EXTRA_operads9thumbs_DEPENDENCIES) 
	@rm -f operads9thumbs$(EXEEXT)
	$(CXXLINK) $(operads9thumbs_OBJECTS) $(operads9thumbs_LDADD) $(LIBS)
operagetheader$(EXEEXT): $(operagetheader_OBJECTS) $(operagetheader_DEPENDENCIES) $(EXTRA_operagetheader_DEPENDENCIES) 
	@rm -f operagetheader$(EXEEXT)
	$(CXXLINK) $(operagetheader_OBJECTS) $(operagetheader_LDADD) $(LIBS)
operaimagestats$(EXEEXT): $(operaimagestats_OBJECTS) $(operaimagestats_DEPENDENCIES) $(EXTRA_operaimagestats_DEPENDENCIES) 
	@rm -f operaimagestats$(EXEEXT)
	$(CXXLINK) $(operaimagestats_OBJECTS) $(operaimagestats_LDADD) $(LIBS)
operaimarith$(EXEEXT): $(operaimarith_OBJECTS) $(operaimarith_DEPENDENCIES) $(EXTRA_operaimarith_DEPENDENCIES) 
	@rm -f operaimarith$(EXEEXT)
	$(CXXLINK) $(operaimarith_OBJECTS) $(operaimarith_LDADD) $(LIBS)
operasaturated$(EXEEXT): $(operasaturated_OBJECTS) $(operasaturated_DEPENDENCIES) $(EXTRA_operasaturated_DEPENDENCIES) 
	@rm -f operasaturated$(EXEEXT)
	$(CXXLINK) $(operasaturated_OBJECTS) $(operasaturated_LDADD) $(LIBS)
operasetheader$(EXEEXT): $(operasetheader_OBJECTS) $(operasetheader_DEPENDENCIES) $(EXTRA_operasetheader_DEPENDENCIES) 
	@rm -f operasetheader$(EXEEXT)
	$(CXXLINK) $(operasetheader_OBJECTS) $(operasetheader_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/catz.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/espqlh.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/opera.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/operaConfigurationAccess.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/operaConvert2ampTo1amp.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/operaCreateBadpixMask.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/operaEspadonsETC.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/operaExtractImage.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/operaExtractRawSum.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/operaFITS2txt.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/operaFITSDisplayImage.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/operaFITStoPNG.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/operaImage.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/operaMJD.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/operaMedianCombine.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/operaParameterAccess.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/operaPlot.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/operaPlotGeom.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/operaPlotInstrumentProfile.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/operaPlotOut.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/operaPlotWave.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/operaQueryImageInfo.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/operaRotate.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/operaRotateMirrorCrop.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/operaStatistics.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/operabiasinjector.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/operacompress.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/operads9thumbs.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/operagetheader.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/operaimagestats.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/operaimarith.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/operasaturated.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/operasetheader.Po@am__quote@

.c.o:
@am__fastdepCC_TRUE@	$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(COMPILE) -c $<

.c.obj:
@am__fastdepCC_TRUE@	$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(COMPILE) -c `$(CYGPATH_W) '$<'`

.c.lo:
@am__fastdepCC_TRUE@	$(LTCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$<' object='$@' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LTCOMPILE) -c -o $@ $<

.cpp.o:
@am__fastdepCXX_TRUE@	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXXCOMPILE) -c -o $@ $<

.cpp.obj:
@am__fastdepCXX_TRUE@	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.cpp.lo:
@am__fastdepCXX_TRUE@	$(LTCXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LTCXXCOMPILE) -c -o $@ $<

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	set x; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(PROGRAMS)
installdirs:
	for dir in "$(DESTDIR)$(bindir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-binPROGRAMS clean-generic clean-libtool mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am:

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am: install-binPROGRAMS

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-binPROGRAMS

.MAKE: install-am install-strip

.PHONY: CTAGS GTAGS all all-am check check-am clean clean-binPROGRAMS \
	clean-generic clean-libtool ctags distclean distclean-compile \
	distclean-generic distclean-libtool distclean-tags distdir dvi \
	dvi-am html html-am info info-am install install-am \
	install-binPROGRAMS install-data install-data-am install-dvi \
	install-dvi-am install-exec install-exec-am install-html \
	install-html-am install-info install-info-am install-man \
	install-pdf install-pdf-am install-ps install-ps-am \
	install-strip installcheck installcheck-am installdirs \
	maintainer-clean maintainer-clean-generic mostlyclean \
	mostlyclean-compile mostlyclean-generic mostlyclean-libtool \
	pdf pdf-am ps ps-am tags uninstall uninstall-am \
	uninstall-binPROGRAMS


# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
